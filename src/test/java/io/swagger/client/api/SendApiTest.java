/*
 * Bitcoin API
 * Blockchain Facilities
 *
 * OpenAPI spec version: 2.0.0
 * Contact: contato@astarlabs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import org.junit.Ignore;
import org.junit.Test;

import br.com.astarlabs.client.ApiException;
import br.com.astarlabs.client.api.SendApi;
import br.com.astarlabs.client.model.SingleResult;

/**
 * API tests for SendApi
 */
public class SendApiTest {

    private final SendApi api = new SendApi();

    
    /**
     * Send file hash to bitcoin blockchain
     *
     * Send an OP_RETURN transaction with a base64 encoded file and return the API id for the blockchain transaction. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendFileTest() throws ApiException {
        
    	String token = null;
        Integer account = null;
        String user = null;
        String password = null;
        String base64 = null;
        String coin = null;
        Integer test = 1;
        SingleResult response = api.sendFile(token, account, user, password, base64, coin, test);

        // TODO: test validations
    }
    
    /**
     * Send a value for address
     *
     * Send a value for address by an blockchain transaction. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendPayAddressTest() throws ApiException {
        String token = null;
        Integer account = null;
        String user = null;
        String password = null;
        String address = null;
        String coin = null;
        Integer test = null;
        SingleResult response = api.sendPayAddress(token, account, user, password, address, coin, test);

        // TODO: test validations
    }
    
    /**
     * Send string to bitcoin blockchain
     *
     * Send an OP_RETURN transaction with a string and return the API id for the blockchain transaction. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendStringTest() throws ApiException {
        String token = null;
        Integer account = null;
        String user = null;
        String password = null;
        String string = null;
        String coin = null;
        Integer test = null;
        SingleResult response = api.sendString(token, account, user, password, string, coin, test);

        // TODO: test validations
    }
    
}
